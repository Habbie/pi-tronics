#!/bin/bash
#
# marvin -- paranoia for normal people
#
# Author: Hamish Cunningham <hamish@gate.ac.uk>
# This code is copyright Hamish Cunningham and the University of Sheffield
# and is licenced under GPL 3 or any later version.
#
### BEGIN INIT INFO
# Provides:          marvin
# Short-Description: marvin: paranoia for normal people
# Description:       secure comms and this and that
### END INIT INFO

# standard locals
P="$0"
USAGE="`basename ${P}` [-h(elp)] [-d(ebug)] [-v(ersion)]"
OPTIONSTRING=hdv

# define LSB log_* functions.
. /lib/lsb/init-functions

# message & exit if exit num present
usage() { log_action_msg Usage: $USAGE; [ ! -z "$1" ] && exit $1; }

# defaults
PATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/bin
DESC="marvin: paranoia for normal people"
NAME=marvin
DNAME=marvind
DAEMON=/usr/sbin/$NAME
PIDFILE=/var/run/$DNAME.pid
INST_DIR=`dirname ${P}`

# options defaults
DEBUG=off

# read configuration variable file if it is present
if [ -r /etc/default/$DNAME ] 
then
  . /etc/default/$DNAME
elif [ -r ./$DNAME.default ]
then
  . ./$DNAME.default
else
  logger "$0: no config data found - fatal error"
  exit 1
fi

# process options
[ ! -z "$*" ] && log_daemon_msg ${NAME} options: $*
while getopts $OPTIONSTRING OPTION
do
  case $OPTION in
    h)	usage 1 ;;
    d)	DEBUG=on ;;
    v)  log_action_msg Version $VERSION; usage 0 ;;
    *)	usage 2 ;;
  esac
done 
shift $(( $OPTIND - 1 ))

# pretty date/time function
pdate() { date +%b-%d-%Y-%T; }

# tell the world
logger "$0: version $VERSION running at `pdate`"
[ "${DEBUG}" = on ] && logger "${NAME}: DEBUG is ${DEBUG}"

# create PIDFILE
echo $! >${PIDFILE}
